{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "clientID": {
            "type": "string"
        },
        "clientPassword": {
            "type": "string"
        }


    },
    "functions": [
    ],
    "variables": {
        "storageAccountName": "[concat('groverstor',uniquestring(resourceGroup().id))]",
        "functionName": "groverFaultInjector",
        "serverFarmName": "groverFIHost",
        "logAnalyticsName": "[concat('groverLog', uniquestring(resourceGRoup().id))]",
        "repoURL": "https://github.com/daweins/grover",
        "repoBranch": "master-faultinjector",
        "cosmosAccountName": "cosmosgrover",
        "cosmosDBName": "grover",
        "cosmosContainerScheduledOperations": "scheduledOperations",
        "cosmosContainerMasterSchedule": "masterSchedule",
        "cosmosContainerTestDefinitions": "testDefinitions"



    },
    "resources": [
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "tags": {
                "displayName": "[variables('storageAccountName')]"
            },
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        {
            "name": "[variables('logAnalyticsName')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2015-11-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 120,
                "features": {
                    "searchVersion": 1
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[variables('serverFarmName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }


        },
        {
            "name": "[variables('functionName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('serverFarmName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverFarmName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountName'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountName'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountName'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('functionName'))]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "clientID",
                            "value": "[parameters('clientID')]"
                        },
                        {
                            "name": "clientPassword",
                            "value": "[parameters('clientPassword')]"
                        },
                        {
                            "name": "targetSubscription",
                            "value": "[subscription().subscriptionId]"
                        },
                        {
                            "name": "tenantId",
                            "value": "[subscription().tenantId]"
                        },
                        {
                            "name": "LAWorkspaceID",
                            "value": "[reference(variables('logAnalyticsName')).customerId]"
                        },
                        {
                            "name": "LASharedKey",
                            "value": "[listKeys(variables('logAnalyticsName'), '2015-11-01-preview').primarySharedKey]"
                        },
                        {
                            "name": "LATable",
                            "value": "GroverActions"
                        },
                        {
                            "name": "cosmosConn",
                            "value": "[concat('AccountEndpoint=',reference(variables('cosmosAccountName')).documentEndpoint,';AccountKey=',  listKeys(variables('cosmosAccountName'),'2020-03-01').primaryMasterKey)]"
                        },
                        {
                            "name": "cosmosDB",
                            "value": "[variables('cosmosDBName')]"
                        },
                        {
                            "name": "cosmosContainerScheduledOperations",
                            "value": "[variables('cosmosContainerScheduledOperations')]"
                        },
                        {
                            "name": "cosmosContainerMasterSchedule",
                            "value": "[variables('cosmosContainerMasterSchedule')]"
                        },
                        {
                            "name": "cosmosContainerTestDefinitions",
                            "value": "[variables('cosmosContainerTestDefinitions')]"
                        },
                        {
                            "name": "rgFilterTag",
                            "value": "allowFaultInjection"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "apiVersion": "2015-08-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites/', variables('functionName'))]"
                    ],
                    "properties": {
                        "RepoUrl": "[variables('repoURL')]",
                        "branch": "[variables('repoBranch')]",
                        "IsManualIntegration": true
                    }
                }
            ]
        },

        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2020-03-01",
            "name": "[variables('cosmosAccountName')]",
            "location": "Central US",
            "tags": {
                "defaultExperience": "Core (SQL)",
                "hidden-cosmos-mmspecial": "",
                "CosmosAccountType": "Non-Production"
            },
            "kind": "GlobalDocumentDB",
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [
                ],
                "disableKeyBasedMetadataWriteAccess": false,
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "Central US",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "capabilities": [
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2020-03-01",
            "name": "[concat(variables('cosmosAccountName'), '/',variables('cosmosDBName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "[variables('cosmosDBName')]"
                },
                "options": {
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2020-03-01",
            "name": "[concat(variables('cosmosAccountName'), '/',variables('cosmosDBName'),'/',variables('cosmosContainerMasterSchedule'))]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosAccountName'), variables('cosmosDBName'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "[variables('cosmosContainerMasterSchedule')]",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/status"
                        ],
                        "kind": "Hash"
                    },
                    "conflictResolutionPolicy": {
                        "mode": "LastWriterWins",
                        "conflictResolutionPath": "/_ts"
                    }
                },
                "options": {
                    "throughput": {
                        "defaultValue": 400,
                        "minValue": 400,
                        "maxValue": 1000000
                    }
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2020-03-01",
            "name": "[concat(variables('cosmosAccountName'), '/',variables('cosmosDBName'),'/',variables('cosmosContainerScheduledOperations'))]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosAccountName'), variables('cosmosDBName'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "[variables('cosmosContainerScheduledOperations')]",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/targetType"
                        ],
                        "kind": "Hash"
                    },
                    "conflictResolutionPolicy": {
                        "mode": "LastWriterWins",
                        "conflictResolutionPath": "/_ts"
                    }
                },
                "options": {
                    "throughput": {
                        "defaultValue": 400,
                        "minValue": 400,
                        "maxValue": 1000000
                    }
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2020-03-01",
            "name": "[concat(variables('cosmosAccountName'), '/',variables('cosmosDBName'),'/',variables('cosmosContainerTestDefinitions'))]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosAccountName'), variables('cosmosDBName'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "[variables('cosmosContainerTestDefinitions')]",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/testDefName"
                        ],
                        "kind": "Hash"
                    },
                    "conflictResolutionPolicy": {
                        "mode": "LastWriterWins",
                        "conflictResolutionPath": "/_ts"
                    }
                },
                "options": {
                    "throughput": {
                        "defaultValue": 400,
                        "minValue": 400,
                        "maxValue": 1000000
                    }
                }
            }
        }

    ],
    "outputs": {
        "cos": {
            "type": "object",
            "value": "[reference(variables('cosmosAccountName'))]"
        }
    }
}
